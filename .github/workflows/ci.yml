name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run go fmt (check only)
        run: |
          if [ "$(gofmt -l . | wc -l)" -ne 0 ]; then
            echo "Go files need to be formatted. Run 'go fmt' locally."
            gofmt -l .
            exit 1
          fi

      - name: Build binary
        run: go build ./cmd/main.go

      - name: Run unit tests
        run: go test -v -cover ./...

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t test-image .

  golangci:
    name: Lint (golangci-lint)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.59.0
          args: --out-format=colored-line-number ./cmd
